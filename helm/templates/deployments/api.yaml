apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openbalena.api.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openbalena.api.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "openbalena.api.selectorLabels" . | nindent 6 }}
  {{- if .Values.api.replicas }}
  replicas: {{ .Values.api.replicas }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "openbalena.api.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-api
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          {{- if .Values.api.imagePullPolicy }}
          imagePullPolicy: {{ .Values.api.imagePullPolicy }}
          {{- end }}
          {{- with .Values.api.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /sys/fs/cgroup
            name: cgroup
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN", "SYS_RESOURCE"]
          env:
          - name: CONFD_BACKEND
            value: "ENV"
          - name: DB_HOST
            value: {{ include "openbalena.db.fullname" . }}
          - name: REDIS_HOST
            value: {{ include "openbalena.redis.fullname" . }}
          {{- with .Values.api.env }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
      volumes:
      - name: run
        emptyDir:
          medium: Memory
      - name: cgroup
        emptyDir:
          medium: Memory
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
